$version Generated by VerilatedVcd $end
$date Fri Dec 15 06:01:14 2023 $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire 32 < addr_i [31:0] $end
  $var wire  1 ; byte_op_i $end
  $var wire  1 9 clk_i $end
  $var wire 32 > rd_o [31:0] $end
  $var wire 32 = wd_i [31:0] $end
  $var wire  1 : we_i $end
  $scope module cache $end
   $var wire 32 < addr_i [31:0] $end
   $var wire  1 ; byte_op_i $end
   $var wire  1 9 clk_i $end
   $var wire 32 < mem_address [31:0] $end
   $var wire  1 & mem_byte_op $end
   $var wire 32 + mem_incoming_data [31:0] $end
   $var wire 32 % mem_write_data [31:0] $end
   $var wire  1 : mem_write_enable $end
   $var wire 32 > rd_o [31:0] $end
   $var wire 32 = wd_i [31:0] $end
   $var wire  1 : we_i $end
   $scope module line $end
    $var wire 32 < address_i [31:0] $end
    $var wire  1 ; byte_op_i $end
    $var wire  2 @ byteoffset [1:0] $end
    $var wire 32 , cache_data[0] [31:0] $end
    $var wire 32 - cache_data[1] [31:0] $end
    $var wire 32 . cache_data[2] [31:0] $end
    $var wire 32 / cache_data[3] [31:0] $end
    $var wire  1 C cache_enable_i $end
    $var wire 30 0 cache_tag[0] [29:0] $end
    $var wire 30 1 cache_tag[1] [29:0] $end
    $var wire 30 2 cache_tag[2] [29:0] $end
    $var wire 30 3 cache_tag[3] [29:0] $end
    $var wire  1 9 clk_i $end
    $var wire  2 ' counter [1:0] $end
    $var wire  1 ( hit $end
    $var wire 32 < mem_address_o [31:0] $end
    $var wire  1 & mem_byte_op_o $end
    $var wire 32 + mem_incoming_data_i [31:0] $end
    $var wire 32 % mem_write_data_o [31:0] $end
    $var wire  1 : mem_write_enable_o $end
    $var wire 32 > read_data_o [31:0] $end
    $var wire 30 ? tag [29:0] $end
    $var wire 32 B tag_bits [31:0] $end
    $var wire  1 4 valid[0] $end
    $var wire  1 5 valid[1] $end
    $var wire  1 6 valid[2] $end
    $var wire  1 7 valid[3] $end
    $var wire  2 ) wayhit [1:0] $end
    $var wire 32 A width [31:0] $end
    $var wire 32 = write_data_i [31:0] $end
    $var wire  1 : write_enable_i $end
    $scope module unnamedblk1 $end
     $var wire 32 # i [31:0] $end
    $upscope $end
    $scope module unnamedblk2 $end
     $var wire 32 * i [31:0] $end
    $upscope $end
   $upscope $end
   $scope module memory $end
    $var wire 32 D BYTE_WIDTH [31:0] $end
    $var wire 32 A DATA_WIDTH [31:0] $end
    $var wire 17 F END_ADDRESS [16:0] $end
    $var wire 32 E START_ADDRESS [31:0] $end
    $var wire 32 8 addr [31:0] $end
    $var wire 32 < addr_i [31:0] $end
    $var wire  1 & byte_op_i $end
    $var wire  1 9 clk_i $end
    $var wire 32 + rd_o [31:0] $end
    $var wire 32 % wd_i [31:0] $end
    $var wire  1 : we_i $end
    $scope module unnamedblk1 $end
     $var wire 32 $ i [31:0] $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000000000000000000000000000 #
b00000000000000000000000000000000 $
b00000000000000000000000000000000 %
0&
b00 '
0(
b00 )
b00000000000000000000000000000000 *
b00000000000000000000000000000000 +
b00000000000000000000000000000000 ,
b00000000000000000000000000000000 -
b00000000000000000000000000000000 .
b00000000000000000000000000000000 /
b000000000000000000000000000000 0
b000000000000000000000000000000 1
b000000000000000000000000000000 2
b000000000000000000000000000000 3
04
05
06
07
b00000000000000000000000000000000 8
19
0:
0;
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000000000000000000000000000000 >
b000000000000000000000000000000 ?
b00 @
b00000000000000000000000000100000 A
b00000000000000000000000000011110 B
1C
b00000000000000000000000000001000 D
b00000000000000010000000000000000 E
b11111111111111111 F
#1
b00000000000000000000000000000100 #
b00000000000000010000000000000000 $
14
09
#2
b10111001000110000001101001010000 +
b00000000000000000000000011000110 ,
b000000000000000100000000000001 0
b00000000000000010000000000000100 8
19
1:
b00000000000000010000000000000110 <
b00000000000000000000000011000110 =
b000000000000000100000000000001 ?
b10 @
#3
b00000000000000000000000011000110 %
b01 '
1(
b00000000000000000000000000000000 +
09
#4
b00111100010011110100001001010101 +
b00000000101101110000000011000110 ,
b00000000000000010000000000000000 8
19
1;
b00000000000000010000000000000010 <
b00000000000000000000000010110111 =
b000000000000000100000000000000 ?
#5
b00000000000000000000000010110111 %
1&
b10 '
0(
b00000000000000000000000000000100 *
b00000000000000000000000000000000 +
b00000000101101110000000000000000 .
b000000000000000100000000000000 2
16
b00000000000000010000000000000010 8
09
#6
b00000000000000000000000011000110 +
b00000000000000000000000011000110 .
b00000000000000010000000000000000 8
19
0:
b00000000000000010000000000000000 <
b00000000000000000000000011101111 =
b00 @
#7
0&
b11 '
1(
b10 )
b00000000000000000000000000000010 *
09
b00000000000000000000000011000110 >
#8
19
b00000000000000010000000000000010 <
b00000000000000000000000001101010 =
b10 @
#9
09
b00000000000000000000000000000000 >
#10
b00000000000000000000000000000000 +
b00000000000000010000000000000100 8
19
0;
b00000000000000010000000000000111 <
b00000000000000000000000011011010 =
b000000000000000100000000000001 ?
b11 @
#11
b00 )
b00000000000000000000000000000000 *
09
b00000000000000000000000011000110 >
#12
b00000000000000000000000011000110 +
b00000000000000000000000011111001 ,
b00000000000000010000000000000000 8
19
1:
b00000000000000010000000000000010 <
b00000000000000000000000011111001 =
b000000000000000100000000000000 ?
b10 @
#13
b00000000000000000000000011111001 %
b00 '
b10 )
b00000000000000000000000000000010 *
b00000000000000000000000010110111 +
b00000000000000000000000011111001 .
09
#14
b00000000000000000000000010011010 .
19
1;
b00000000000000010000000000000000 <
b00000000000000000000000010011010 =
b00 @
#15
b00000000000000000000000010011010 %
1&
b01 '
b00000000000000000000000011111001 +
09
#16
b00000000000000000000000000000000 +
b00000000001010010000000010011010 .
b00000000000000010000000000000010 8
19
b00000000000000010000000000000010 <
b00000000000000000000000000101001 =
b10 @
#17
b00000000000000000000000000101001 %
b10 '
b00000000000000000000000010011010 +
09
#18
b00000000000000000000000000000000 +
b00000000001010010000000011110110 .
b00000000000000010000000000000100 8
19
b00000000000000010000000000000100 <
b00000000000000000000000011110110 =
b000000000000000100000000000001 ?
b00 @
#19
b00000000000000000000000011110110 %
b11 '
b00 )
b00000000000000000000000000000000 *
b00000000000000000000000000101001 +
b00000000000000000000000011110110 ,
09
#20
19
0:
0;
b00000000000000000000000001100100 =
#21
0&
09
b00000000000000000000000011110110 >
#22
b01011001000000000000000011110110 ,
19
1:
1;
b00000000000000010000000000000111 <
b00000000000000000000000001011001 =
b11 @
#23
b00000000000000000000000001011001 %
1&
b00 '
b00000000000000000000000000000000 +
b00000000000000010000000000000111 8
09
#24
b00000000000000010000000000000011 8
19
0:
b00000000000000010000000000000011 <
b00000000000000000000000010111011 =
b000000000000000100000000000000 ?
#25
0&
b10 )
b00000000000000000000000000000010 *
b00000000100110100000000011111001 +
b00000000000000010000000000000000 8
09
b00000000000000000000000000000000 >
#26
19
b00000000000000000000000011100101 =
#27
09
#28
19
0;
b00000000000000010000000000000001 <
b00000000000000000000000010000001 =
b01 @
#29
09
b00000000001010010000000011110110 >
#30
b00000000001010010110101111110110 .
19
1:
1;
b00000000000000000000000001101011 =
#31
b00000000000000000000000001101011 %
1&
b01 '
b00000000000000000000000000000000 +
b00000000000000010000000000000001 8
09
#32
b00000000000000010000000000000110 8
19
0:
0;
b00000000000000010000000000000110 <
b00000000000000000000000010110010 =
b000000000000000100000000000001 ?
b10 @
#33
0&
b00 )
b00000000000000000000000000000000 *
b00000000000000000000000011110110 +
b00000000000000010000000000000100 8
09
b00000000001010010110101111110110 >
#34
b00000000000000000000000001011001 +
b11100111000000000000000011110110 ,
b00000000000000010000000000000000 8
19
1:
1;
b00000000000000010000000000000011 <
b00000000000000000000000011100111 =
b000000000000000100000000000000 ?
b11 @
#35
b00000000000000000000000011100111 %
1&
b10 '
b10 )
b00000000000000000000000000000010 *
b00000000000000000000000000000000 +
b11100111001010010110101111110110 .
b00000000000000010000000000000011 8
09
#36
b00000000000000000000000011110110 +
b00000000000000000000000010011011 .
b00000000000000010000000000000100 8
19
0;
b00000000000000010000000000000100 <
b00000000000000000000000010011011 =
b000000000000000100000000000001 ?
b00 @
#37
b00000000000000000000000010011011 %
0&
b11 '
b00 )
b00000000000000000000000000000000 *
b00000000000000000000000011100111 +
b00000000000000000000000010011011 ,
09
#38
b00000000000000000000000000011111 ,
19
b00000000000000000000000000011111 =
#39
b00000000000000000000000000011111 %
b00 '
b00000000000000000000000010011011 +
09
