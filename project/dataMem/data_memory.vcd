$version Generated by VerilatedVcd $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire 32 ( addr_i [31:0] $end
  $var wire  1 ' byte_op_i $end
  $var wire  1 % clk_i $end
  $var wire 32 * rd_o [31:0] $end
  $var wire 32 ) wd_i [31:0] $end
  $var wire  1 & we_i $end
  $scope module data_memory $end
   $var wire 32 + ADDRESS_WIDTH [31:0] $end
   $var wire 32 - BYTE_WIDTH [31:0] $end
   $var wire 32 , DATA_WIDTH [31:0] $end
   $var wire 32 / END_ADDRESS [31:0] $end
   $var wire 32 . START_ADDRESS [31:0] $end
   $var wire  1 # addr $end
   $var wire 32 ( addr_i [31:0] $end
   $var wire  1 ' byte_op_i $end
   $var wire  1 % clk_i $end
   $var wire 32 * rd_o [31:0] $end
   $var wire 32 ) wd_i [31:0] $end
   $var wire  1 & we_i $end
   $scope module unnamedblk1 $end
    $var wire 32 $ i [31:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
b00000000000000000000000000000000 $
1%
0&
0'
b00000000000000000000000000000000 (
b00000000000000000000000000000000 )
b00000000000000000000000000000000 *
b00000000000000000000000000000101 +
b00000000000000000000000000100000 ,
b00000000000000000000000000001000 -
b00000000000000010000000000000000 .
b00000000000000011111111111111111 /
#1
b00000000000000010000000000000000 $
0%
#2
1%
1&
1'
b00000000000000010000000000001000 (
b00000000000000000000000011101001 )
#3
0%
b00000000000000000000000011101001 *
#4
1%
0&
0'
b00000000000000010000000000000111 (
b00000000000000000000000000000001 )
b11101001111010011110100111101001 *
#5
0%
#6
1%
1&
1'
b00000000000000010000000000000010 (
b00000000000000000000000010101001 )
b00000000000000000000000011101001 *
#7
0%
b00000000000000000000000010101001 *
#8
1%
0&
b00000000000000010000000000000001 (
b00000000000000000000000010010011 )
#9
0%
#10
1%
b00000000000000010000000000001001 (
b00000000000000000000000010010100 )
#11
0%
#12
1%
1&
0'
b00000000000000010000000000000011 (
b00000000000000000000000010010000 )
b10101001101010011010100110101001 *
#13
0%
b10101001101010011010100110010000 *
#14
1%
b00000000000000010000000000000101 (
b00000000000000000000000010010001 )
#15
0%
b10101001101010011010100110010001 *
#16
1%
0&
1'
b00000000000000010000000000000100 (
b00000000000000000000000011000100 )
b00000000000000000000000010010001 *
#17
0%
#18
1%
1&
0'
b00000000000000010000000000001000 (
b00000000000000000000000001010001 )
b10101001101010011010100110010001 *
#19
0%
b10101001101010011010100101010001 *
#20
1%
b00000000000000010000000000000111 (
b00000000000000000000000010100110 )
#21
0%
b10101001101010011010100110100110 *
#22
1%
0&
1'
b00000000000000010000000000001001 (
b00000000000000000000000000011010 )
b00000000000000000000000010100110 *
#23
0%
#24
1%
0'
b00000000000000010000000000000001 (
b00000000000000000000000000110101 )
b10101001101010011010100110100110 *
#25
0%
#26
1%
1&
1'
b00000000000000010000000000000000 (
b00000000000000000000000010100110 )
b00000000000000000000000010100110 *
#27
0%
#28
1%
0&
b00000000000000010000000000000010 (
b00000000000000000000000010001100 )
#29
0%
#30
1%
1&
0'
b00000000000000010000000000001000 (
b00000000000000000000000000010010 )
b10100110101001101010011010100110 *
#31
0%
b10100110101001101010011000010010 *
#32
1%
0&
b00000000000000010000000000000110 (
b00000000000000000000000011010100 )
#33
0%
#34
1%
b00000000000000010000000000001001 (
b00000000000000000000000000011001 )
#35
0%
#36
1%
b00000000000000010000000000000101 (
b00000000000000000000000011101001 )
#37
0%
#38
1%
1&
1'
b00000000000000010000000000000100 (
b00000000000000000000000000101001 )
b00000000000000000000000000010010 *
#39
0%
b00000000000000000000000000101001 *
