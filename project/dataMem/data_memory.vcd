$version Generated by VerilatedVcd $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire 32 ( addr_i [31:0] $end
  $var wire  1 ' byte_op_i $end
  $var wire  1 % clk_i $end
  $var wire 32 * rd_o [31:0] $end
  $var wire 32 ) wd_i [31:0] $end
  $var wire  1 & we_i $end
  $scope module data_memory $end
   $var wire 32 + ADDRESS_WIDTH [31:0] $end
   $var wire 32 - BYTE_WIDTH [31:0] $end
   $var wire 32 , DATA_WIDTH [31:0] $end
   $var wire 32 / END_ADDRESS [31:0] $end
   $var wire 32 . START_ADDRESS [31:0] $end
   $var wire  1 # addr $end
   $var wire 32 ( addr_i [31:0] $end
   $var wire  1 ' byte_op_i $end
   $var wire  1 % clk_i $end
   $var wire 32 * rd_o [31:0] $end
   $var wire 32 ) wd_i [31:0] $end
   $var wire  1 & we_i $end
   $scope module unnamedblk1 $end
    $var wire 32 $ i [31:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
b00000000000000000000000000000000 $
1%
0&
0'
b00000000000000000000000000000000 (
b00000000000000000000000000000000 )
b00000000000000000000000000000000 *
b00000000000000000000000000000101 +
b00000000000000000000000000100000 ,
b00000000000000000000000000001000 -
b00000000000000010000000000000000 .
b00000000000000011111111111111111 /
#1
b00000000000000010000000000000000 $
0%
#2
1%
b00000000000000010110010010111110 (
b00000000000000000000000000010001 )
#3
0%
#4
1%
1'
b00000000000000011010010100011101 (
b00000000000000000000000000011110 )
#5
0%
#6
1%
1&
0'
b00000000000000010111000011000101 (
b00000000000000000000000011000011 )
b00000000000000000000000011000011 *
#7
0%
#8
1%
0&
1'
b00000000000000011010000010101100 (
b00000000000000000000000001001110 )
#9
0%
#10
1%
0'
b00000000000000011101001110100111 (
b00000000000000000000000001000110 )
#11
0%
#12
1%
1&
b00000000000000011110011010010001 (
b00000000000000000000000001101100 )
b00000000000000000000000001101100 *
#13
0%
#14
1%
0&
1'
b00000000000000010011011001001100 (
b00000000000000000000000001001110 )
#15
0%
#16
1%
1&
b00000000000000011111111111101010 (
b00000000000000000000000000011110 )
b00000000000000000000000000011110 *
#17
0%
#18
1%
0'
b00000000000000010100001011110010 (
b00000000000000000000000011011011 )
b00011110000111100001111011011011 *
#19
0%
#20
1%
1'
b00000000000000011101101001110000 (
b00000000000000000000000011111010 )
b00000000000000000000000011111010 *
#21
0%
#22
1%
0&
b00000000000000011110000011100100 (
b00000000000000000000000011111001 )
#23
0%
#24
1%
b00000000000000011000111101010001 (
b00000000000000000000000000001010 )
#25
0%
#26
1%
1&
b00000000000000010011010100001010 (
b00000000000000000000000010111011 )
b00000000000000000000000010111011 *
#27
0%
#28
1%
0&
0'
b00000000000000010010100011011110 (
b00000000000000000000000000111101 )
b10111011101110111011101110111011 *
#29
0%
#30
1%
b00000000000000011101100010110010 (
b00000000000000000000000010000100 )
#31
0%
#32
1%
1&
1'
b00000000000000010001000110011101 (
b00000000000000000000000001100110 )
b00000000000000000000000001100110 *
#33
0%
#34
1%
0&
0'
b00000000000000011011100100000000 (
b00000000000000000000000011010100 )
b01100110011001100110011001100110 *
#35
0%
#36
1%
1&
b00000000000000011101010011011100 (
b00000000000000000000000000000100 )
b01100110011001100110011000000100 *
#37
0%
#38
1%
1'
b00000000000000010001001110000000 (
b00000000000000000000000000010110 )
b00000000000000000000000000010110 *
#39
0%
