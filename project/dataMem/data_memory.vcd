$version Generated by VerilatedVcd $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire 32 ( addr_i [31:0] $end
  $var wire  1 ' byte_op_i $end
  $var wire  1 % clk_i $end
  $var wire 32 * rd_o [31:0] $end
  $var wire 32 ) wd_i [31:0] $end
  $var wire  1 & we_i $end
  $scope module data_memory $end
   $var wire 32 + ADDRESS_WIDTH [31:0] $end
   $var wire 32 - BYTE_WIDTH [31:0] $end
   $var wire 32 , DATA_WIDTH [31:0] $end
   $var wire 32 / END_ADDRESS [31:0] $end
   $var wire 32 . START_ADDRESS [31:0] $end
   $var wire  1 # addr $end
   $var wire 32 ( addr_i [31:0] $end
   $var wire  1 ' byte_op_i $end
   $var wire  1 % clk_i $end
   $var wire 32 * rd_o [31:0] $end
   $var wire 32 ) wd_i [31:0] $end
   $var wire  1 & we_i $end
   $scope module unnamedblk1 $end
    $var wire 32 $ i [31:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
b00000000000000000000000000000000 $
1%
0&
0'
b00000000000000000000000000000000 (
b00000000000000000000000000000000 )
b00000000000000000000000000000000 *
b00000000000000000000000000000101 +
b00000000000000000000000000100000 ,
b00000000000000000000000000001000 -
b00000000000000010000000000000000 .
b00000000000000011111111111111111 /
#1
b00000000000000010000000000000000 $
0%
#2
1%
1&
1'
b00000000000000011111001101101100 (
b00000000000000000000000010100000 )
b00000000000000000000000010100000 *
#3
0%
#4
1%
0&
0'
b00000000000000010100011100000100 (
b00000000000000000000000000010001 )
b10100000101000001010000010100000 *
#5
0%
#6
1%
1'
b00000000000000010011011011110011 (
b00000000000000000000000010011000 )
b00000000000000000000000010100000 *
#7
0%
#8
1%
0'
b00000000000000011111111100010101 (
b00000000000000000000000000100010 )
b10100000101000001010000010100000 *
#9
0%
#10
1%
b00000000000000010101110010010111 (
b00000000000000000000000001011101 )
#11
0%
#12
1%
1&
b00000000000000011010111110100011 (
b00000000000000000000000010010010 )
b10100000101000001010000010010010 *
#13
0%
#14
1%
0&
b00000000000000010011111001110000 (
b00000000000000000000000001000010 )
#15
0%
#16
1%
1&
1'
b00000000000000010100110110111101 (
b00000000000000000000000000111100 )
b00000000000000000000000000111100 *
#17
0%
#18
1%
0&
b00000000000000010101001011100111 (
b00000000000000000000000000111001 )
#19
0%
#20
1%
1&
b00000000000000010001101101000001 (
b00000000000000000000000011101001 )
b00000000000000000000000011101001 *
#21
0%
#22
1%
0'
b00000000000000010100001110100000 (
b00000000000000000000000000101111 )
b11101001111010011110100100101111 *
#23
0%
#24
1%
b00000000000000011100111011110000 (
b00000000000000000000000001110100 )
b11101001111010011110100101110100 *
#25
0%
#26
1%
0&
b00000000000000011000100010111100 (
b00000000000000000000000010101001 )
#27
0%
#28
1%
b00000000000000010000010010001100 (
b00000000000000000000000000011010 )
#29
0%
#30
1%
1&
1'
b00000000000000010100011000100010 (
b00000000000000000000000010111110 )
b00000000000000000000000010111110 *
#31
0%
#32
1%
b00000000000000010000101001001100 (
b00000000000000000000000001001100 )
b00000000000000000000000001001100 *
#33
0%
#34
1%
0&
0'
b00000000000000011011111000000010 (
b00000000000000000000000001010010 )
b01001100010011000100110001001100 *
#35
0%
#36
1%
b00000000000000011111001000010101 (
b00000000000000000000000001111001 )
#37
0%
#38
1%
b00000000000000011001110000101001 (
b00000000000000000000000010011101 )
#39
0%
